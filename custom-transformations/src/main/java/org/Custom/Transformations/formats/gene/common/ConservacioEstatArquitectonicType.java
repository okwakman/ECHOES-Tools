//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.11.12 at 05:24:55 PM CET 
//


package org.Custom.Transformations.formats.gene.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ConservacioEstatArquitectonicType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ConservacioEstatArquitectonicType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Bo"/&gt;
 *     &lt;enumeration value="Mitjà"/&gt;
 *     &lt;enumeration value="Dolent"/&gt;
 *     &lt;enumeration value="Ruïna"/&gt;
 *     &lt;enumeration value="Si"/&gt;
 *     &lt;enumeration value="No"/&gt;
 *     &lt;enumeration value="Desaparegut"/&gt;
 *     &lt;enumeration value="Regular"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ConservacioEstatArquitectonicType")
@XmlEnum
public enum ConservacioEstatArquitectonicType {

    @XmlEnumValue("Bo")
    BO("Bo"),
    @XmlEnumValue("Mitj\u00e0")
    MITJÀ("Mitj\u00e0"),
    @XmlEnumValue("Dolent")
    DOLENT("Dolent"),
    @XmlEnumValue("Ru\u00efna")
    RUÏNA("Ru\u00efna"),
    @XmlEnumValue("Si")
    SI("Si"),
    @XmlEnumValue("No")
    NO("No"),
    @XmlEnumValue("Desaparegut")
    DESAPAREGUT("Desaparegut"),
    @XmlEnumValue("Regular")
    REGULAR("Regular");
    private final String value;

    ConservacioEstatArquitectonicType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ConservacioEstatArquitectonicType fromValue(String v) {
        for (ConservacioEstatArquitectonicType c: ConservacioEstatArquitectonicType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
